/*
 * Copyright 2025 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

rule suspicious_curl_exe_download {

  meta:
    author = "Florian Roth (Nextron Systems), Nasreddine Bencherchali (Nextron Systems)"
    description = "Detects a suspicious curl process start on Windows and outputs the requested document to a local file"
    reference = "https://github.com/SigmaHQ/sigma/blob/master/rules/windows/process_creation/proc_creation_win_curl_susp_download.yml"
    license = "https://github.com/SigmaHQ/Detection-Rule-License/blob/main/LICENSE.Detection.Rules.md"
    rule_name = "Suspicious Curl.EXE Download"
    sigma_uuid = "e218595b-bbe7-4ee5-8a96-f32a24ad3468"
    sigma_status = "test"
    rule_id = "mr_51da61c3-b1c7-4dd1-ad4c-ab5dfc96e075"
    tactic = "TA0011"
    technique = "T1105"
    type = "Detection"
    data_source = "Sysmon"
    platform = "Windows"
    severity = "High"
    priority = "High"
    false_positives = "Unknown"

  events:
    $process.metadata.event_type = "PROCESS_LAUNCH"
    (
      re.regex($process.target.process.file.full_path, `\\curl\.exe$`) nocase or
      $process.target.asset.software.description = "The curl executable" nocase
    )
    (
      strings.contains(strings.to_lower($process.target.process.command_line), "%appdata%") or
      strings.contains(strings.to_lower($process.target.process.command_line), "%public%") or
      strings.contains(strings.to_lower($process.target.process.command_line), "%temp%") or
      strings.contains(strings.to_lower($process.target.process.command_line), "%tmp%") or
      strings.contains(strings.to_lower($process.target.process.command_line), "\\appdata\\") or
      strings.contains(strings.to_lower($process.target.process.command_line), "\\desktop\\") or
      strings.contains(strings.to_lower($process.target.process.command_line), "\\temp\\") or
      strings.contains(strings.to_lower($process.target.process.command_line), "\\users\\public\\") or
      strings.contains(strings.to_lower($process.target.process.command_line), "c:\\perflogs\\") or
      strings.contains(strings.to_lower($process.target.process.command_line), "c:\\programdata\\") or
      strings.contains(strings.to_lower($process.target.process.command_line), "c:\\windows\\temp\\") or
      re.regex($process.target.process.command_line, `\.(dll|gif|jpeg|jpg|png|temp|tmp|txt|vbe|vbs)$`) NOCASE
    )

    not (
        $process.principal.process.file.full_path = "C:\\Program Files\\Git\\usr\\bin\\sh.exe" and
        $process.target.process.file.full_path = "C:\\Program Files\\Git\\mingw64\\bin\\curl.exe" and
        strings.contains(strings.to_lower($process.target.process.command_line), "--silent --show-error --output ") and
        strings.contains(strings.to_lower($process.target.process.command_line), "gfw-httpget-") and
        strings.contains(strings.to_lower($process.target.process.command_line), "appdata")
    )

    $process.principal.hostname = $hostname

  match:
    $hostname over 5m

  outcome:
    //example usage of specifying test user and hostname to adjust risk score
    $risk_score = max(if($process.principal.user.userid = "user" and $process.principal.hostname = "hostname", 0, 15))
    $principal_process_pid = array_distinct($process.principal.process.pid)
    $principal_process_command_line = array_distinct($process.principal.process.command_line)
    $principal_process_file_sha256 = array_distinct($process.principal.process.file.sha256)
    $principal_process_file_full_path = array_distinct($process.principal.process.file.full_path)
    $principal_process_product_specfic_process_id = array_distinct($process.principal.process.product_specific_process_id)
    $principal_process_parent_process_product_specfic_process_id = array_distinct($process.principal.process.parent_process.product_specific_process_id)
    $target_process_pid = array_distinct($process.target.process.pid)
    $target_process_command_line = array_distinct($process.target.process.command_line)
    $target_process_file_sha256 = array_distinct($process.target.process.file.sha256)
    $target_process_file_full_path = array_distinct($process.target.process.file.full_path)
    $target_process_product_specfic_process_id = array_distinct($process.target.process.product_specific_process_id)
    $principal_user_userid = array_distinct($process.principal.user.userid)
    $log_type = array_distinct(strings.concat($process.metadata.log_type,"/",$process.metadata.product_event_type))

  condition:
    $process
}
